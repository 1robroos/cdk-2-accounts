trigger:
  branches:
    include:
      - feature/*
      - dev
      - master

variables:
  system.debug: 'false'

pool:
  vmImage: 'ubuntu-latest'

steps:

  
# - task: NodeTool@0
#   inputs:
#     versionSpec: '22.0.0'

# - script: |
#     cd cdk-code
#     echo "Installing packages"
#     sudo npm install -g aws-cdk
#     #sudo gem install cfn-nag  
#     pip install -r requirements.txt  # otherwise error: ModuleNotFoundError: No module named 'aws_cdk'
#   displayName: 'Installing aws cdk'

- task: AWSCLI@1
  inputs:
    awsCredentials: 'ADO-test-this-account' # 'my-aws-account-cdk-2-accounts' # shared from serv.conn: 'my-aws-account' # iam user azuredevops in master account
    regionName: 'us-east-1'
    awsCommand: 'sts'
    awsSubCommand: 'get-caller-identity'
  displayName: 'aws sts test3'
# gives:
#   {
#     "UserId": "AIDA6DPCBMLV4PVAYJWRP",
#     "Account": "969526043371",
#     "Arn": "arn:aws:iam::969526043371:user/azuredevops"
# }


# - task: AWSShellScript@1
#   inputs:
#     awsCredentials: 'my-aws-account-cdk-2-accounts'
#     regionName: 'us-east-1'
#     scriptType: 'inline'
#     inlineScript: |
#       echo "Running cdk ls"
#       cdk ls
#   displayName: 'list cdk ls'

# - task: AWSShellScript@1
#   inputs:
#     awsCredentials: 'AWS-SANDBOX'
#     regionName: 'eu-central-1'
#     scriptType: 'inline'
#     inlineScript: |
#       echo "Running validations"
#       cdk synth -o out
#       cd out
#       fname=$(find *.template.json)
#       echo "Testing output with cfn-nag-scan"
#       cfn_nag_scan --input-path $fname
#   displayName: 'Validating with cfn_nag'

# - task: AWSCLI@1
#   inputs:
#     awsCredentials: 'AWS-SANDBOX'
#     regionName: 'eu-central-1'
#     awsCommand: 'cloudformation'
#     awsSubCommand: 'list-stacks'
#   displayName: 'aws cli list cfn stacks'

# - task: AWSShellScript@1
#   inputs:
#     awsCredentials: 'IAM-azuredevops-user'
#     #awsCredentials: 'AWS-SANDBOX'
#     regionName: 'eu-central-1'
#     scriptType: 'inline'
#     inlineScript: 'aws s3 ls'
#     # disableAutoCwd: true
#     # workingDirectory: '$(System.DefaultWorkingDirectory)'
#     # failOnStandardError: false
#   displayName: 'aws s3 ls'


# - task: AWSShellScript@1
#   inputs:
#     awsCredentials: 'AWS-SANDBOX'
#     regionName: 'eu-central-1'
#     scriptType: 'inline'
#     inlineScript: |
#       echo "cdk synth to generate cdk.out dir"
#       cdk synth
#   displayName: 'cdk synthesize'

# - task: AWSShellScript@1
#   inputs:
#     awsCredentials: 'AWS-SANDBOX'
#     regionName: 'eu-central-1'
#     scriptType: 'inline'
#     inlineScript: |
#       echo "cdk diff without arguments"
#       cdk diff
#       echo "Generating CDK diff file"
#       cdk diff -o out -c aws-cdk:enableDiffNoFail=true --no-color "*" 2>&1 | sed -n '/Resources/,/Outputs/p' | sed 's/├/\+/g; s/│/|/g; s/─/-/g; s/└/`/g' | head -n -1 | tee output.log
#       sed -i '1 i\```bash' output.log
#       sed -i -e '$a```' output.log
#       cat output.log
#   displayName: 'Generating CDK diff file'


# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: $(System.DefaultWorkingDirectory)
#     artifactName: cdk-arti

# # onderstaan werkt enkel met een PR of issue.
# # GitHub Comment v0   https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/github-comment-v0?view=azure-pipelines
# # via https://dev.azure.com/1robroos/SNS-SQS/_settings/boards-external-integration
# # Write a comment to your GitHub entity i.e. issue or a pull request (PR).
# - task: GitHubComment@0
#   inputs:
#     gitHubConnection: github-rob-personal # string. Required. GitHub connection (OAuth or PAT). 
#     repositoryName: '$(Build.Repository.Name)' # string. Required. Repository. Default: $(Build.Repository.Name).
#     #id: # string. ID of the github pr/issue. 
#     comment: "Refer to output.log" # string. Comment.



